% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FCVAR_aux.R
\name{GetFreeParams}
\alias{GetFreeParams}
\title{Count the Number of Free Parameters}
\usage{
GetFreeParams(k, r, p, opt, rankJ)
}
\arguments{
\item{k}{The number of lags in the system.}

\item{r}{The cointegrating rank.}

\item{p}{The number of variables in the system.}

\item{opt}{A list object that stores the chosen estimation options,
generated from \code{FCVARoptions()}.}

\item{rankJ}{The rank of a conditioning matrix, as described in
Boswijk & Doornik (2004, p.447), which is only used if there are
restrictions imposed on \code{alpha} or \code{beta}, otherwise \code{NULL}.}
}
\value{
The number of free parameters \code{fp}.
}
\description{
\code{GetFreeParams} counts the number of free parameters based on
	the number of coefficients to estimate minus the total number of
	restrictions. When both \code{alpha} and \code{beta} are restricted,
	the rank condition is used to count the free parameters in those two variables.
}
\examples{
opt <- FCVARoptions()
opt$gridSearch   <- 0 # Disable grid search in optimization.
opt$dbMin        <- c(0.01, 0.01) # Set lower bound for d,b.
opt$dbMax        <- c(2.00, 2.00) # Set upper bound for d,b.
opt$constrained  <- 0 # Impose restriction dbMax >= d >= b >= dbMin ? 1 <- yes, 0 <- no.
newOpt <- FCVARoptionUpdates(opt, p = 3, r = 1) # Need to update restriction matrices.
GetFreeParams(k = 2, r = 1, p = 3, opt = newOpt, rankJ = NULL)

opt <- FCVARoptions()
opt$dbMin        <- c(0.01, 0.01) # Set lower bound for d,b.
opt$dbMax        <- c(2.00, 2.00) # Set upper bound for d,b.
opt$constrained  <- 0 # Impose restriction dbMax >= d >= b >= dbMin ? 1 <- yes, 0 <- no.
opt$R_Beta <- matrix(c(1, 0, 0), nrow = 1, ncol = 3)
newOpt <- FCVARoptionUpdates(opt, p = 3, r = 1) # Need to update restriction matrices.
GetFreeParams(k = 2, r = 1, p = 3, opt = newOpt, rankJ = 4)

opt <- FCVARoptions()
opt$dbMin        <- c(0.01, 0.01) # Set lower bound for d,b.
opt$dbMax        <- c(2.00, 2.00) # Set upper bound for d,b.
opt$constrained  <- 0 # Impose restriction dbMax >= d >= b >= dbMin ? 1 <- yes, 0 <- no.
opt$R_Alpha <- matrix(c(0, 1, 0), nrow = 1, ncol = 3)
newOpt <- FCVARoptionUpdates(opt, p = 3, r = 1) # Need to update restriction matrices.
GetFreeParams(k = 2, r = 1, p = 3, opt = newOpt, rankJ = 4)
}
\references{
Boswijk, H. P. and J. A. Doornik (2004).
"Identifying, estimating and testing restricted cointegrated systems:
An overview," Statistica Neerlandica 58, 440-465.
}
\seealso{
\code{FCVARoptions} to set default estimation options.
\code{FCVARestn}, \code{HypoTest} and \code{LagSelect} to estimate the FCVAR model
and use this in the calculation of the degrees of freedom
for a variety of statistics.

Other FCVAR auxilliary functions: 
\code{\link{FCVARforecast}()},
\code{\link{FCVARhess}()},
\code{\link{FCVARlikeFull}()},
\code{\link{FCVARlikeGrid}()},
\code{\link{FCVARlikeMu}()},
\code{\link{FCVARlike}()},
\code{\link{FCVARsimBS}()},
\code{\link{FCVARsim}()},
\code{\link{FracDiff}()},
\code{\link{GetEstimates}()},
\code{\link{GetParams}()},
\code{\link{GetResiduals}()},
\code{\link{GetRestrictedParams}()},
\code{\link{Lbk}()},
\code{\link{SEmat2vecU}()},
\code{\link{SEvec2matU}()},
\code{\link{TransformData}()},
\code{\link{plot.FCVAR_grid}()}
}
\concept{FCVAR auxilliary functions}
